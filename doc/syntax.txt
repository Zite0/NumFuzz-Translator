r ::=                                           SENSITIVITY ANNOTATIONS
      R                                         real-valued sensitivity 
      inf                                       infinite sensitivity

T ::=                                           TYPES
      ()                                        single-valued unit type
      num                                       numeric type
      (T,T)                                     tensor product
      (|T,T|)                                   cartesian product
      T + T                                     sum
      T -o T                                    1-sensitive function
      MuT                                       monadic type
      M[eps_64up]T                              syntactic sugar for M[2^(-52)]
      M[eps_32up]T                              syntactic sugar for M[2^(-23)]
      M[eps_16up]T                              syntactic sugar for M[2^(-10)]
      !sT                                       co-monadic type

v, w ::=                                        VALUES
      ()                                        value of unit type
      k in R                                    constants (reals > 0)
      (v,w)                                     tensor pairs
      <v,w>                                     cartesian pairs
      inl v                                     injection into sum
      inr v                                     injection into sum
      fun (x:T) {e}                             ordinary function
      [v{r}]                                    co-monadic scaling
      rnd16 v                                   round toward +inf in 16-bit precision
      rnd32 v                                   round toward +inf in 32-bit precision
      rnd64 v                                   round toward +inf in 64-bit precision
      ret v                                     monadic return 
      let x = (rnd v); e                        base monadic sequence  

e, f ::=                                        EXPRESSIONS
      v                                         values
      vw                                        application
      fst v                                     cartesian pair destructor
      snd v                                     cartesian pair destructor
      let (x,y) = v; e                          tensor destructor
      case v {inl(x) => e | inr(x) => f}        case analysis
      if v then {e} else {f}			      conditional 
      let [x] = v; e                            co-monadic sequencing
      let x = v; e                              monadic sequencing
      x = e; f                                  pure sequencing
      op v                                      exact ops in (+,*,/,sqrt,==,<)

Examples:

  f = fun (x : num) { fun (y : num)  { x+y }};
  f 5

