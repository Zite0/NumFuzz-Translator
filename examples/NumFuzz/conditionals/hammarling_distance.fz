#include "../float_ops/addfp64.fz"
#include "../float_ops/divfp64.fz"
#include "../float_ops/pow2_64.fz"

/*Interior conditional of the Hammarling alg for Euclidean length
    of a vector.
  Ref: "Numerical Methods in Scientific Computing, VOLUME 1".
        Dahlquist and Bjorck. Siam. 2008. page 119. 
*/

function hammarling 
        (x : num) (t : num) (s : num) {
    b = gt (x,t); 
    if b then {
        s0 = divfp64 (t,x);
        let s1 = s0;
        s2 = pow2_64 s1;
        let s3 = s2;
        s4 = mulfp64 (s,s3);
        let s5 = s4;
        addfp64 <1.0,s5> 
    }
    else {
        s0 = divfp64 (t,x);
        let s1 = s0;
        s2 = pow2_64 s1;
        let s3 = s2;
        addfp64 <s,s3> 
    }
}

hammarling
