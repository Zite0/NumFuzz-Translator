#include "../float_ops/addfp64.fz"
#include "../float_ops/pow8_64.fz"

function Estrin10   
    (as : (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,         num)))))))))))    
    (x : num) 
{
    let (a0,as1) = as;
    let (a1,as2) = as1;
    let (a2,as3) = as2;
    let (a3,as4) = as3;
    let (a4,as5) = as4;
    let (a5,as6) = as5;
    let (a6,as7) = as6;
    let (a7,as8) = as7;
    let (a8,as9) = as8;
    let (a9,a10) = as9;
    
    t1 = mulfp64(a1,x);
    t3 = mulfp64(a3,x);
    t5 = mulfp64(a5,x);
    t7 = mulfp64(a7,x);
    t9 = mulfp64(a9,x);

    let t1' = t1;
    let t3' = t3;
    let t5' = t5;
    let t7' = t7;
    let t9' = t9;

    z0 = addfp64<a0,t1'>;
    let z0' = z0;
    z2 = addfp64<a2,t3'>;
    let z2' = z2;
    z4 = addfp64<a4,t5'>;
    let z4' = z4;
    z6 = addfp64<a6,t7'>;
    let z6' = z6;
    z8 = addfp64<a8,t9'>;
    let z8' = z8;

    p2 =  mulfp64(x,x);
    let p2' = p2;
    s0 = mulfp64(z2',p2');
    let s0' = s0;

    p6 =  mulfp64(x,x);
    let p6' = p6;
    s1 = mulfp64(z6',p6');
    let s1' = s1;
    
    p10 =  mulfp64(x,x);
    let p10' = p10;
    s2 = mulfp64(a10,p10'); 
    let s2' = s2;

    u0 = addfp64<z0',s0'>;
    let u0' = u0;
    u1 = addfp64<z4',s1'>;
    let u1' = u1;
    u2 = addfp64<z8',s2'>;
    let u2' = u2;

    r4 =  pow4_64 x;
    let r4' = r4;    
    r8 =  pow8_64 x;
    let r8' = r8;    

    v00 = mulfp64(u1',r4');
    let v00' = v00;
    v0 = addfp64<u0',v00'>;
    let v0' = v0;

    v1 = mulfp64(u2',r8');
    let v1' = v1;

    addfp64<v0',v1'>
}

Estrin10

