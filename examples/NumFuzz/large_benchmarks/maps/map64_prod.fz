/* maps a function over the pairs in a product of 
    64 elements*/

function map64_prod
    (as : 
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), ((num, num),
    ((num, num), ((num, num), ((num, num), ((num, num), 
    ((num, num), ((num, num), ((num, num), (num, num))
    )))))))))))))))))))))))))))))))))))))))))))))))))))
    ))))))))))))
    (c : ((![1.0](num,num)) -o M[eps64_up]num))
{
    let (a0, as1) = as;
    let (a1, as2) = as1;
    let (a2, as3) = as2;
    let (a3, as4) = as3;
    let (a4, as5) = as4;
    let (a5, as6) = as5;
    let (a6, as7) = as6;
    let (a7, as8) = as7;
    let (a8, as9) = as8;
    let (a9, as10) = as9;
    let (a10, as11) = as10;
    let (a11, as12) = as11;
    let (a12, as13) = as12;
    let (a13, as14) = as13;
    let (a14, as15) = as14;
    let (a15, as16) = as15;
    let (a16, as17) = as16;
    let (a17, as18) = as17;
    let (a18, as19) = as18;
    let (a19, as20) = as19;
    let (a20, as21) = as20;
    let (a21, as22) = as21;
    let (a22, as23) = as22;
    let (a23, as24) = as23;
    let (a24, as25) = as24;
    let (a25, as26) = as25;
    let (a26, as27) = as26;
    let (a27, as28) = as27;
    let (a28, as29) = as28;
    let (a29, as30) = as29;
    let (a30, as31) = as30;
    let (a31, as32) = as31;
    let (a32, as33) = as32;
    let (a33, as34) = as33;
    let (a34, as35) = as34;
    let (a35, as36) = as35;
    let (a36, as37) = as36;
    let (a37, as38) = as37;
    let (a38, as39) = as38;
    let (a39, as40) = as39;
    let (a40, as41) = as40;
    let (a41, as42) = as41;
    let (a42, as43) = as42;
    let (a43, as44) = as43;
    let (a44, as45) = as44;
    let (a45, as46) = as45;
    let (a46, as47) = as46;
    let (a47, as48) = as47;
    let (a48, as49) = as48;
    let (a49, as50) = as49;
    let (a50, as51) = as50;
    let (a51, as52) = as51;
    let (a52, as53) = as52;
    let (a53, as54) = as53;
    let (a54, as55) = as54;
    let (a55, as56) = as55;
    let (a56, as57) = as56;
    let (a57, as58) = as57;
    let (a58, as59) = as58;
    let (a59, as60) = as59;
    let (a60, as61) = as60;
    let (a61, as62) = as61;
    let (a62, a63) = as62;

    s63 = c a63;
    s62 = c a62;
    s61 = c a61;
    s60 = c a60;
    s59 = c a59;
    s58 = c a58;
    s57 = c a57;
    s56 = c a56;
    s55 = c a55;
    s54 = c a54;
    s53 = c a53;
    s52 = c a52;
    s51 = c a51;
    s50 = c a50;
    s49 = c a49;
    s48 = c a48;
    s47 = c a47;
    s46 = c a46;
    s45 = c a45;
    s44 = c a44;
    s43 = c a43;
    s42 = c a42;
    s41 = c a41;
    s40 = c a40;
    s39 = c a39;
    s38 = c a38;
    s37 = c a37;
    s36 = c a36;
    s35 = c a35;
    s34 = c a34;
    s33 = c a33;
    s32 = c a32;
    s31 = c a31;
    s30 = c a30;
    s29 = c a29;
    s28 = c a28;
    s27 = c a27;
    s26 = c a26;
    s25 = c a25;
    s24 = c a24;
    s23 = c a23;
    s22 = c a22;
    s21 = c a21;
    s20 = c a20;
    s19 = c a19;
    s18 = c a18;
    s17 = c a17;
    s16 = c a16;
    s15 = c a15;
    s14 = c a14;
    s13 = c a13;
    s12 = c a12;
    s11 = c a11;
    s10 = c a10;
    s9 = c a9;
    s8 = c a8;
    s7 = c a7;
    s6 = c a6;
    s5 = c a5;
    s4 = c a4;
    s3 = c a3;
    s2 = c a2;
    s1 = c a1;
    s0 = c a0;

(s0, (s1, (s2, (s3, (s4, (s5, (s6, (s7, (s8, (s9, (s10, (s11, (s12, (s13, (s14, (s15, (s16, (s17, (s18, (s19, (s20, (s21, (s22, (s23, (s24, (s25, (s26, (s27, (s28, (s29, (s30, (s31, (s32, (s33, (s34, (s35, (s36, (s37, (s38, (s39, (s40, (s41, (s42, (s43, (s44, (s45, (s46, (s47, (s48, (s49, (s50, (s51, (s52, (s53, (s54, (s55, (s56, (s57, (s58, (s59, (s60, (s61, (s62, s63))))))))))))))))))))))))))))))))))))))))))))))))
)))))))))))))))

}
